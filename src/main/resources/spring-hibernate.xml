<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="/WEB-INF/classes/config.properties"/>
	
	

<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.theo">
	    <context:include-filter type="regex" expression=".dao..*"/>
		<context:include-filter type="regex" expression=".service..*"/>
		<context:include-filter type="regex" expression=".action..*"/>
	</context:component-scan>

	<!-- 配置数据源  Druid数据源-->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="5" />
		<!--连接池最大使用连接数量 -->
		<property name="maxActive" value="500" />
		<!--连接池最大空闲 -->
		<property name="maxIdle" value="100" />
		<!-- 连接池最小空闲-->
		<property name="minIdle" value="5" />
		<!--获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- 是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能  是否自动回收超时连接 -->
		 <property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟  超时时间-->
		<property name="removeAbandonedTimeout" value="1800" />
		 <!--关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		</bean>

	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
			
   
		<!-- Hiebrnate 属性配置信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.dialect">${hibernate.dialect}</prop>  -->
				<prop key="hibernate.dialect">com.theo.util.InspectDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                
                <prop key="cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                
                <prop key="default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
                <prop key="jdbc.use_scrollable_resultset">${hibernate.jdbc.use_scrollable_resultset}</prop>
                <prop key="autoReconnect">${hibernate.autoReconnect}</prop>
                
			</props>
		</property>
		
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="packagesToScan">
			<list>
				<value>com.theo.model.system</value>
				
				
				<!-- 
				<value>com.theo.model.basis</value>
				<value>com.theo.model.system</value>
				<value>com.theo.model.monitor</value>
				<value>com.theo.model.problem</value>
				<value>com.theo.model.baseinfo</value> 
				-->
			</list>
		</property>

	</bean>
	
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory" />
	</bean>
	


</beans>